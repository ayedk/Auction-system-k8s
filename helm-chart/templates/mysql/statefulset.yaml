apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mysql.name }}
  labels:
    app: {{ .Values.mysql.labels.app }}
  annotations:
    "helm.sh/hook": "{{ .Values.mysql.annotations.order }}"
spec:
  serviceName: {{ .Values.mysql.name }}-headless
  replicas: {{ .Values.mysql.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.mysql.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.mysql.labels.app }}
    spec:
      containers:
      - name: {{ .Values.mysql.spec.name }}
        image: "{{ .Values.mysql.spec.image.repository }}:{{ .Values.mysql.spec.image.tag }}"
        imagePullPolicy: {{ .Values.mysql.spec.image.pullPolicy }}
        ports:
        - name: client
          containerPort: {{ .Values.mysql.spec.ports.containerPort }}
          protocol: TCP
        envFrom:
        - secretRef:
            name: {{ .Values.mysql.secret.name }}
        volumeMounts:
        - name: {{ .Values.mysql.spec.volumeMounts.name }}
          mountPath: {{ .Values.mysql.spec.volumeMounts.mountPath }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.mysql.volumeClaimTemplates.name }}
    spec:
      accessModes: ["{{ .Values.mysql.volumeClaimTemplates.accessModes }}"]
      storageClassName: {{ .Values.mysql.volumeClaimTemplates.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.mysql.volumeClaimTemplates.storage }}
